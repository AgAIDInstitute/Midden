@page "/"
@inject Services.StateContainer State



@if (State?.AppConfig != null)
{
    <PageHeader Class="site-page-header"
                Title="@State.AppConfig.OrganizationName"
                Subtitle="Metadata Tool" />
}


@if (State != null)
{
    <p>LastUpdated: @State.LastUpdated</p>
}
else
{
    <p>None loaded</p>
}

<p>@DebugMsg</p>
<div>
    <Row Gutter="16">
        <AntDesign.Col Span="8">
            <Card Hoverable Cover="coverTemplate">
                <CardMeta Title="Dashboard" Description="Stats for nerds" />
            </Card>
        </AntDesign.Col>
        <AntDesign.Col Span="8">
            <Card Hoverable Cover="coverTemplate">
                <CardMeta Title="Catalog" Description="Find and view datasets" />
            </Card>
        </AntDesign.Col>
        <AntDesign.Col Span="8">
            <Card Hoverable Cover="coverTemplate">
                <CardMeta Title="Editor" Description="Add dataset" />
            </Card>
        </AntDesign.Col>
    </Row>

</div>


@code{
    public string DebugMsg { get; set; } = "";
    private RenderFragment coverTemplate =@<img alt="example" src="https://phenocam.sr.unh.edu/data/latest/cafcookeastltar01.jpg" />;

    private async Task AppConfig_StateChanged(
            ComponentBase source,
            string appConfig)
    {
        if (source != this)
        {
            await InvokeAsync(StateHasChanged);
            DebugMsg = "StateHasChanged";
        }
    }

    protected override void OnInitialized()
    {
        State.StateChanged += async (source, property)
            => await AppConfig_StateChanged(source, property);
    }
    public void Dispose()
    {
        State.StateChanged -= async (source, property)
            => await AppConfig_StateChanged(source, property);
    }
}